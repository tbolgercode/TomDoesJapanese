/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin: undefined
*/

"use strict";var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var main_exports={};__export(main_exports,{default:()=>ShortcutEditMode});module.exports=__toCommonJS(main_exports);var import_obsidian=require("obsidian"),ShortcutEditMode=class extends import_obsidian.Plugin{button;async onload(){console.log(`[${this.manifest.name}] Loaded`);let translation={live:i18next.t("plugins.editor-status.edit-live-preview"),source:i18next.t("plugins.editor-status.edit-source"),showViewHeader:i18next.t("setting.appearance.option-show-view-header")};this.button={live:{icon:"pencil-ruler",tooltip:translation.live},source:{icon:"code",tooltip:translation.source}};let config=this.app.vault.config,errorMessage=function(type){let text=`<span class="error">Error: \xAB <u>${type==="livePreview"?translation.live:translation.showViewHeader}</u> \xBB is disabled. Enable it in settings.</span>`;return(0,import_obsidian.sanitizeHTMLToDom)(text)};(config.livePreview===!1||config.showViewHeader===!1)&&new import_obsidian.Notice(errorMessage(config.livePreview===!1?"livePreview":"showViewHeader"),0),this.enableMode(),this.registerEvent(this.app.workspace.on("active-leaf-change",leaf=>{this.setOnlyIfNotExists(leaf)})),this.registerEvent(this.app.workspace.on("layout-change",()=>{this.removeAction(),this.enableMode()}))}setOnlyIfNotExists(leaf){let view=leaf?.view;view&&view.getState().mode==="source"&&(view?.actionsEl.querySelector(".edit-mode-button")||this.enableMode())}onunload(){this.removeAction(),console.log(`[${this.manifest.name}] Unloaded`)}enableMode(){let lpState=this.app.workspace.getActiveFileView();if(lpState&&lpState.getState().mode==="source"){let mode=lpState.getState().source===!0?"source":"live";this.addButton(mode,lpState)}}removeAction(){document.querySelectorAll(".edit-mode-button").forEach(el=>{el.remove()})}addButton(mode,lpState){lpState.addAction(this.button[mode].icon,this.button[mode].tooltip,()=>{this.app.commands.executeCommandById("editor:toggle-source")}).addClass("edit-mode-button")}};

/* nosourcemap */