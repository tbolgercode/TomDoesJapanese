/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin: undefined
*/

"use strict";var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var main_exports={};__export(main_exports,{default:()=>ShortcutEditMode});module.exports=__toCommonJS(main_exports);var import_obsidian3=require("obsidian");var import_obsidian=require("obsidian");var en_exports={};__export(en_exports,{default:()=>en_default});var en_default={actualMode:"Current view:",settings:{includeReadingMode:{desc:"Include preview mode in the switch. You can change the order in the settings below.",title:"Include preview mode"},orderToggle:"Order of toggles",removeButton:"Remove the default switch between reading & editing.",reverseButton:{desc:"Display the next mode button in place of the current one.",title:"Reverse button icons"}}};var fr_exports={};__export(fr_exports,{default:()=>fr_default});var fr_default={actualMode:"Mode actuel :",settings:{includeReadingMode:{desc:"Inclure le mode lecture dans le bouton. Vous pouvez changer l'ordre dans les param\xE8tres ci-dessous.",title:"Inclure le mode lecture"},orderToggle:"Ordre des boutons",removeButton:"Supprimer le bouton par d\xE9faut entre le mode de lecture et d'\xE9dition.",reverseButton:{desc:"Affiche le bouton du prochain mode \xE0 la place de l'actuel.",title:"Inverser les icones des boutons"}}};var resources={fr:fr_exports,en:en_exports},localeUsed=window.localStorage.language||import_obsidian.moment.locale(),translationLanguage=Object.keys(resources).find(i=>i.toLocaleLowerCase()==localeUsed.toLowerCase())?localeUsed.toLowerCase():"en",ln=i18next.createInstance();var DEFAULT_SETTINGS={includeReadingMode:!1,reverseButtonGraphics:!1};var import_obsidian2=require("obsidian");var ShorcutEditTab=class extends import_obsidian2.PluginSettingTab{plugin;settings;constructor(app,plugin){super(app,plugin),this.plugin=plugin,this.settings=this.plugin.settings}display(){let{containerEl}=this;containerEl.empty();let translation={live:i18next.t("plugins.editor-status.edit-live-preview"),source:i18next.t("plugins.editor-status.edit-source"),showViewHeader:i18next.t("setting.appearance.option-show-view-header"),preview:i18next.t("setting.editor.option-default-new-tab-view-reading")};if(new import_obsidian2.Setting(containerEl).setName(ln.t("settings.reverseButton.title")).setDesc(ln.t("settings.reverseButton.desc")).addToggle(toggle=>{toggle.setValue(this.settings.reverseButtonGraphics).onChange(async value=>{this.settings.reverseButtonGraphics=value,await this.plugin.saveSettings(),this.plugin.app.workspace.trigger("layout-change")})}),new import_obsidian2.Setting(containerEl).setName(ln.t("settings.includeReadingMode.title")).setDesc(ln.t("settings.includeReadingMode.desc")).addToggle(toggle=>{toggle.setValue(this.settings.includeReadingMode).onChange(async value=>{this.settings.includeReadingMode=value,value||(this.settings.removeReadingButton=!1,this.plugin.showDefaultButton()),await this.plugin.saveSettings(),this.display(),this.plugin.app.workspace.trigger("layout-change")})}),this.settings.includeReadingMode){new import_obsidian2.Setting(containerEl).setName(ln.t("settings.removeButton")).addToggle(toggle=>{toggle.setValue(this.settings.removeReadingButton??!1).onChange(async value=>{this.settings.removeReadingButton=value,await this.plugin.saveSettings(),value?this.plugin.hideDefaultButton():this.plugin.showDefaultButton()})});let orders=this.settings.order??["live","source","preview"];new import_obsidian2.Setting(containerEl).setHeading().setName(ln.t("settings.orderToggle"));for(let mode of orders){let isFirst=orders[0]===mode,isLast=orders[orders.length-1]===mode;new import_obsidian2.Setting(containerEl).setName(translation[mode]).addButton(button=>{button.setDisabled(isFirst).setIcon("chevron-up").setTooltip("Move up").onClick(async()=>{let index=orders.indexOf(mode);orders.splice(index,1),orders.splice(index-1,0,mode),this.settings.order=orders,await this.plugin.saveSettings(),this.display()})}).addButton(button=>{button.setDisabled(isLast).setIcon("chevron-down").setTooltip("Move down").onClick(async()=>{let index=orders.indexOf(mode);orders.splice(index,1),orders.splice(index+1,0,mode),this.settings.order=orders,await this.plugin.saveSettings(),this.display()})})}}}};var ShortcutEditMode=class extends import_obsidian3.Plugin{settings;button;displayNextStateButton(mode){if(!this.button)throw new Error("Button not initialized");let result={icon:"",tooltip:""},nextMode=this.settings.includeReadingMode?this.getNext(mode):mode==="live"?"source":"live";if(this.settings.reverseButtonGraphics){let buttonMode;this.settings.includeReadingMode&&nextMode?buttonMode=nextMode:buttonMode=mode==="source"?"live":"source",result.icon=this.button[buttonMode].icon;let actionText=buttonMode==="preview"?i18next.t("interface.menu.switch-to-edit-view"):i18next.t("interface.menu.switch-to-read-view");result.tooltip=`${actionText} (${this.button[buttonMode].tooltip})`}else{result.icon=this.button[mode].icon,result.tooltip=`${ln.t("actualMode")} ${this.button[mode].tooltip}`;let nextModeTooltip=nextMode==="preview"?this.button.preview.tooltip:this.button[nextMode].tooltip;result.tooltip+=`
${i18next.t("interface.menu.switch-to-edit-view")} (${nextModeTooltip})`}return result}toggleMode(lpState){let mode=this.getMode(lpState);if(this.settings.includeReadingMode){let next=this.getNext(mode);(next==="preview"||mode==="preview")&&this.app.commands.executeCommandById("markdown:toggle-preview"),mode==="live"&&next==="source"||mode==="source"&&next==="live"?this.app.commands.executeCommandById("editor:toggle-source"):(this.app.commands.executeCommandById("editor:toggle-source"),sleep(1).then(()=>{this.app.commands.executeCommandById("editor:toggle-source")}))}else this.app.commands.executeCommandById("editor:toggle-source")}async onload(){console.log(`[${this.manifest.name}] Loaded`),await this.loadSettings(),this.addSettingTab(new ShorcutEditTab(this.app,this));let translation={live:i18next.t("plugins.editor-status.edit-live-preview"),source:i18next.t("plugins.editor-status.edit-source"),showViewHeader:i18next.t("setting.appearance.option-show-view-header"),preview:i18next.t("setting.editor.option-default-new-tab-view-reading")};await ln.init({lng:translationLanguage,fallbackLng:"en",ns:["default"],defaultNS:"default",returnNull:!1,returnEmptyString:!1,resources}),this.button={live:{icon:"pencil-ruler",tooltip:translation.live},source:{icon:"code",tooltip:translation.source},preview:{icon:"book-open",tooltip:translation.preview}};let config=this.app.vault.config,errorMessage=function(type){let text=`<span class="error">Error: \xAB <u>${type==="livePreview"?translation.live:translation.showViewHeader}</u> \xBB is disabled. Enable it in settings.</span>`;return(0,import_obsidian3.sanitizeHTMLToDom)(text)};(config.livePreview===!1||config.showViewHeader===!1)&&new import_obsidian3.Notice(errorMessage(config.livePreview===!1?"livePreview":"showViewHeader"),0),this.settings.removeReadingButton&&this.settings.includeReadingMode&&this.hideDefaultButton(),this.enableMode(),this.registerEvent(this.app.workspace.on("active-leaf-change",leaf=>{this.setOnlyIfNotExists(leaf)})),this.registerEvent(this.app.workspace.on("layout-change",()=>{this.removeAction(),this.hideDefaultButton(),this.enableMode()})),this.addCommand({id:"switch-mode",name:"Switch mode",checkCallback:checking=>{let lpState=this.app.workspace.getActiveFileView();return lpState?(checking||this.toggleMode(lpState),!0):!1}})}hideDefaultButton(){if(this.settings.removeReadingButton&&this.settings.includeReadingMode){let button=document.querySelector(`.clickable-icon.view-action[aria-label*="${i18next.t("interface.menu.read-view")}"], .clickable-icon.view-action[aria-label*="${i18next.t("interface.menu.edit-view")}"]`);button&&button.classList.add("edit-mode-hide")}}showDefaultButton(){let button=document.querySelector(`.clickable-icon.view-action[aria-label*="${i18next.t("interface.menu.read-view")}"], .clickable-icon.view-action[aria-label*="${i18next.t("interface.menu.edit-view")}"]`);button&&button.classList.remove("edit-mode-hide")}getViewAction(view){return view.actionsEl?.querySelector(".edit-mode-button")}setOnlyIfNotExists(leaf){let view=leaf?.view;if(view){let viewState=view.getState();this.settings.includeReadingMode&&viewState.file?this.getViewAction(view)||this.enableMode():viewState.mode==="source"&&(this.getViewAction(view)||this.enableMode())}}onunload(){this.removeAction(),console.log(`[${this.manifest.name}] Unloaded`),this.showDefaultButton()}enableMode(){let lpState=this.app.workspace.getActiveFileView();if(lpState){if(this.settings.includeReadingMode)this.addButton(this.getMode(lpState),lpState);else if(lpState.getState().mode==="source"){let mode=lpState.getState().source===!0?"source":"live";this.addButton(mode,lpState)}}}getMode(lpState){return lpState.getState().mode==="source"?lpState.getState().source===!0?"source":"live":"preview"}getNext(actualMode){let order=this.settings.order??["live","source","preview"],next=order.indexOf(actualMode)+1;return next>=order.length&&(next=0),order[next]}removeAction(){activeDocument.querySelectorAll(".edit-mode-button").forEach(el=>{el.remove()})}addButton(mode,lpState){this.button||new Error("Button is not defined");let button=this.displayNextStateButton(mode),action=lpState.addAction(button.icon,button.tooltip,()=>{this.toggleMode(lpState)});action.addClass("edit-mode-button");let defaultButton=lpState.leaf.containerEl.querySelector(`.clickable-icon.view-action[aria-label*="${i18next.t("interface.menu.read-view")}"], .clickable-icon.view-action[aria-label*="${i18next.t("interface.menu.edit-view")}"]`);defaultButton&&action.after(defaultButton)}async loadSettings(){this.settings=Object.assign({},DEFAULT_SETTINGS,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};

/* nosourcemap */